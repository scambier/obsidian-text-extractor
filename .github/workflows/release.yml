name: Release Obsidian plugin

on:
  push:
    tags:
      - '*'

env:
  PLUGIN_NAME: text-extractor
  PLUGIN_PATH: plugin
  LIB_PATH: lib
  DIST_FOLDER: dist

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: jetli/wasm-pack-action@v0.4.0

      - uses: pnpm/action-setup@v4
        with:
          version: 10.10.0
          run_install: false

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'

      - name: Build Lib
        id: build_lib
        run: |
          cd ${{ env.LIB_PATH }}
          pnpm install
          pnpm run build

      - name: Build Plugin
        id: build_plugin
        run: |
          cd ${{ env.PLUGIN_PATH }}
          pnpm install
          pnpm run build
          cd ..
          mkdir ${{ env.PLUGIN_NAME }}
          cp ${{ env.PLUGIN_PATH }}/${{ env.DIST_FOLDER }}/* ${{ env.PLUGIN_NAME }}
          zip -r ${{ env.PLUGIN_NAME }}.zip ${{ env.PLUGIN_NAME }}
          ls
          echo "tag_name=$(git tag --sort version:refname | tail -n 1)" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ github.ref }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload zip file
        id: upload-zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.PLUGIN_NAME }}.zip
          asset_name: ${{ env.PLUGIN_NAME }}-${{ steps.build_plugin.outputs.tag_name }}.zip
          asset_content_type: application/zip

      - name: Upload main.js
        id: upload-main
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.PLUGIN_PATH }}/${{ env.DIST_FOLDER }}/main.js
          asset_name: main.js
          asset_content_type: text/javascript

      - name: Upload manifest.json
        id: upload-manifest
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./manifest.json
          asset_name: manifest.json
          asset_content_type: application/json

      # - name: Upload styles.css
      #   id: upload-css
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ${{ env.PLUGIN_PATH }}/${{ env.DIST_FOLDER }}/styles.css
      #     asset_name: styles.css
      #     asset_content_type: text/css
